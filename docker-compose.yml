version: "3"
services:
  db:
    image: ${REPO}db:${TAG:-latest}
    #    platform: linux/arm/v7
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=TBSV96364xXi2JeWZiVibnbGczFNg
    build:
      context: ./db
    ports:
      - 5432:5432
    restart: always
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      interval: 1h

  backend-sadhguru:
    image: ${REPO}backend:${TAG:-latest}

    #    platform: linux/arm/v7
    environment:
      - DB_HOST=db
      - DB_PASSWORD=TBSV96364xXi2JeWZiVibnbGczFNg
      - TAG=${TAG}
    links:
      - db
    build:
      context: ./backend
    ports:
      - 8000:8000
    volumes:
      - httplib_cache:/app/.cache
      - logs:/app/logs
    restart: always
    healthcheck:
      interval: 1h

  backend-sadhguru-fileserver:
    image: ${REPO}backend:${TAG:-latest}

    environment:
      - IPFS_HOST=ipfs
      - DB_HOST=13.126.203.46
      - DB_PASSWORD=TBSV96364xXi2JeWZiVibnbGczFNg
    build:
      context: ./backend
    entrypoint: ["nice", "-n", "20", "poetry", "run", "python", "-O", "manage.py", "videosdb","--download-and-register-in-ipfs"]
    volumes:
      - logs:/app/logs
      - /mnt/videos:/mnt/videos
  ipfs:
    image: ${REPO}ipfs:${TAG:-latest}
    environment:
      - IPFS_PATH=/mnt/ipfs-repo
    build:
      context: ./ipfs
    ports:
      - 18080:18080
      - 5001:5001
      - 14001:14001      
    volumes:
      - /mnt/videos:/mnt/videos
      - /mnt/ipfs-repo:/mnt/ipfs-repo
    restart: always


  # frontend-sadhguru:
  #         #    platform: linux/arm/v7
  #   image: ${REPO}frontend:${TAG:-latest}

  #   environment:
  #     - API_URL=http://backend-sadhguru:8000
  #   links:
  #     - backend-sadhguru
  #   build:
  #     context: ./frontend
  #   ports:
  #     - 3000:3000
  #   restart: always
  #   healthcheck:
  #     interval: 1h

  # backend-sadhguru-cron:
  #   image: ${REPO}backend:${TAG:-latest}
  #   environment:
  #   build:
  #     context: ./backend
  #   entrypoint: ["su", "-c", "cron -f"]
  #   links:
  #     -  backend-sadhguru   
  #   volumes:
  #     - httplib_cache:/app/.cache
  #     - logs:/tmp/         
  #   restart: always
  #   healthcheck:
  #     interval: 1h      

  # nginx:
  #   image: ${REPO}nginx:${TAG:-latest}
  #   build:
  #     context: ./nginx
  #   ports:
  #     - 80:80
  #     - 443:443
  #   restart: always
  #   healthcheck:
  #     interval: 1h

  # nginx-cron:
  #   image: ${REPO}nginx:${TAG:-latest}
  #   build:
  #     context: ./nginx
  #   entrypoint: ["su", "-c", "cron -f"]
  #   links:
  #     - nginx      
  #   restart: always
  #   healthcheck:
  #     interval: 1h
      

volumes:
  logs:
  httplib_cache:
  db:

version: '3'
env:
    DOCKER_PASSWORD: 5@fs@i@58Zp6wfiH
    REPO_PROJECT: worpdress-279321
    REPO: '{{if empty .BRANCH_NAME }}{{else}}grc.io/{{.REPO_PROJECT}}/{{.BRANCH_NAME}}/{{end}}'
tasks:
    setup:
        internal: true
        cmds:
            - pgrep docker > /dev/null || sudo service docker start
            - rm -fr ./dist
    docker-login:
        cmds:
            - echo $DOCKER_PASSWORD | docker login --username eelis --password-stdin
        silent: true


    backend: docker compose build --pull backend

    frontend: docker compose build --pull frontend

    firebase: docker compose build --pull firebase


    test-servers:
        cmds:
            - docker compose --profile test-servers build  --pull
            - docker compose up --detach firebase-emulator json-caching-proxy


    frontend-unittests:
        deps:  [frontend]
        cmds:
            - docker compose run frontend yarn test

    backend-unittests:
        deps:  [test-servers, backend]
        cmds:
            - docker compose  run -e FIRESTORE_EMULATOR_HOST=localhost:8080 \
                backend run python -m unittest

    tests-end2end:
        depends: [frontend-unittests, backend-unittests, test-servers]
        cmds:
            - docker compose --profile test-servers up --detach
            - docker compose run backend run main -c -e
            - docker compose run frontend yarn generate-and-start

    generate:
        deps: [frontend, backend, firebase]
        cmds:
            - docker compose run backend run main -c
            - docker compose run frontend yarn generate
            - docker compose cp frontend:/app/dist ./frontend
            - docker compose run firebase deploy --project ${FIREBASE_PROJECT} --only=hosting

    build-frontend:
        deps: [frontend, frontend-unittests]
        cmds:
            - docker compose push frontend

    build-backend:
        deps: [backend, backend-unittests]
        cmds:
            - docker compose push frontend

    build-frontend-plus-end2end-tests:
        deps: [frontend, frontend-unittests, tests-end2end]
        cmds:
            - docker compose push frontend

    build-backend-plus-end2end-tests:
        deps: [backend, backend-unittests, tests-end2end]
        cmds:
            - docker compose push backend
